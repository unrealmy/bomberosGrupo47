/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bomberosgrupo47.Vistas;

import bomberosgrupo47.accesoADatos.BrigadaData;
import bomberosgrupo47.accesoADatos.CuartelData;
import bomberosgrupo47.accesoADatos.SiniestroData;
import bomberosgrupo47.entidades.Brigada;
import bomberosgrupo47.entidades.Cuartel;
import bomberosgrupo47.entidades.Siniestro;
import java.awt.Graphics;
import java.awt.Image;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author hecto
 */
public class SiniestroVista extends javax.swing.JInternalFrame {
private SiniestroData sinData=new SiniestroData();
private Siniestro sin=null;
private Raton raton;
private String[] especial= {"incendios","salvamento","rescates en montaña","inundaciones","accidentes de tráfico","prevención"};
    /**
     * Creates new form SiniestroVista
     */
    public SiniestroVista() {
        initComponents();
        transparencia();
        cargarCombo ();
        CargarCespe();
        jlAsignar.setVisible(false);
        raton=new Raton(jDesktopPane2);
        jCespe.setSelectedItem(null);
        jlInfo.setText("  Total de Siniestros : "+sinData.TotalSiniestro()+"            Siniestros que han ocurrido entre ayer y hoy : "+sinData.ayerHoySiniestro());
    }
    
    public void transparencia(){
jbSalir.setOpaque(false);
jbSalir.setContentAreaFilled(false);
jbSalir.setBorderPainted(false);

}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icono = new ImageIcon(getClass().getResource("/imagenes/fondoSini.png"));
        Image gen= icono.getImage();
        jDesktopPane1 = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(gen,0,0,getWidth(),getHeight(),this);

            }

        };
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtX = new javax.swing.JTextField();
        jtY = new javax.swing.JTextField();
        jtDetalle = new javax.swing.JTextField();
        jtPuntos = new javax.swing.JTextField();
        jtBrigada = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jbSalir = new javax.swing.JButton();
        jdResol = new com.toedter.calendar.JDateChooser();
        jdFecha = new com.toedter.calendar.JDateChooser();
        jCespe = new javax.swing.JComboBox<>();
        ImageIcon icono2 = new ImageIcon(getClass().getResource("/imagenes/mapa.png"));
        Image gen2= icono2.getImage();
        jDesktopPane2 = new javax.swing.JDesktopPane(){
            public void paintComponent(Graphics g){
                g.drawImage(gen2,0,0,getWidth(),getHeight(),this);

            }

        };
        jlmarca = new javax.swing.JLabel();
        jlCuartel = new javax.swing.JLabel();
        jlInfo = new javax.swing.JLabel();
        jlAsignar = new javax.swing.JLabel();
        jlCuartel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1304, 547));

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane1.setPreferredSize(new java.awt.Dimension(1304, 547));
        jDesktopPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Codigo:");
        jDesktopPane1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 90, -1, -1));

        jLabel2.setText("*Tipo   :");
        jDesktopPane1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 191, 56, -1));

        jLabel3.setText("*Fecha :");
        jDesktopPane1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 229, -1, -1));

        jLabel4.setText("Cordenada X:");
        jDesktopPane1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 265, -1, -1));

        jLabel5.setText("Y:");
        jDesktopPane1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(257, 265, -1, -1));

        jLabel6.setText("Detalle:");
        jDesktopPane1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 309, -1, -1));

        jLabel7.setText("Fecha resolucion:");
        jDesktopPane1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 381, -1, -1));

        jLabel8.setText("Puntuacion:");
        jDesktopPane1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 420, -1, -1));

        jLabel9.setText("brigada asignada:");
        jDesktopPane1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(29, 465, -1, -1));

        jtX.setEditable(false);
        jtX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtXActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jtX, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 262, 59, -1));

        jtY.setEditable(false);
        jDesktopPane1.add(jtY, new org.netbeans.lib.awtextra.AbsoluteConstraints(279, 262, 57, -1));
        jDesktopPane1.add(jtDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 306, 175, -1));
        jDesktopPane1.add(jtPuntos, new org.netbeans.lib.awtextra.AbsoluteConstraints(163, 417, 96, -1));

        jtBrigada.setEditable(false);
        jDesktopPane1.add(jtBrigada, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 462, 98, -1));

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 86, 89, -1));

        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jbGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(808, 282, -1, -1));

        jbEliminar.setText("Eliminar");
        jDesktopPane1.add(jbEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(808, 235, -1, -1));

        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jbNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(808, 188, 89, -1));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel10.setText("Siniestro");
        jDesktopPane1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 0, 246, 29));

        jButton5.setText("Asignar brigada");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(278, 461, -1, -1));

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 87, 285, -1));

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/botonSalir2.gif"))); // NOI18N
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jbSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(808, 389, 99, -1));
        jDesktopPane1.add(jdResol, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 375, 175, -1));
        jDesktopPane1.add(jdFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 223, 175, -1));

        jDesktopPane1.add(jCespe, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 188, 219, -1));

        jDesktopPane2.setPreferredSize(new java.awt.Dimension(285, 213));
        jDesktopPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDesktopPane2MouseClicked(evt);
            }
        });

        jlmarca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pin.png"))); // NOI18N

        jlCuartel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pin2.png"))); // NOI18N

        jDesktopPane2.setLayer(jlmarca, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jlCuartel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane2Layout.createSequentialGroup()
                .addComponent(jlCuartel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 202, Short.MAX_VALUE)
                .addComponent(jlmarca))
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jlCuartel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlmarca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 174, Short.MAX_VALUE))
        );

        jDesktopPane1.add(jDesktopPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 220, -1, -1));
        jDesktopPane1.add(jlInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 56, 592, 21));
        jDesktopPane1.add(jlAsignar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 430, 236, 64));

        jlCuartel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pin2.png"))); // NOI18N
        jDesktopPane1.add(jlCuartel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, -1, -1));

        jLabel11.setText("= ubicacion de cuartel");
        jDesktopPane1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1273, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // Salir
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
//        Siniestro a =(Siniestro)jComboBox1.getSelectedItem();
        //        SiniestroData cargar = new SiniestroData();

    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // limpiar campos
//        jtTipo.setText("");
        limpiarCampos();
        sin=null;

    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
         // guardar o actualizar   falta terminar!!!
        
                  try{
                      if (jdResol.getDate()!=null && jtBrigada.getText()!=null) {
                           int nbrigada = Integer.parseInt(jtBrigada.getText());
                    BrigadaData bd = new BrigadaData();
                    Brigada bri = bd.buscarBrigada(nbrigada);
                   
                   
                    String detalle=jtDetalle.getText();
                    
                    LocalDate fechaR= jdResol.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate(); 
                          if (fechaR.isAfter(LocalDate.now()) ) {
                              JOptionPane.showMessageDialog(this, " no se permite cerrar un siniestro con una fecha estimada a futuro ");
                              return;
                          }
                          
                          if (jtPuntos.getText().isEmpty()) {
                              
                              JOptionPane.showMessageDialog(this, " Si el siniestro se resolvio debe colocar una puntuación ");
                              return;
                          }
                          if (!(jtPuntos.getText().matches("[1-9]|10")) ) {
                            JOptionPane.showMessageDialog(this, " la puntuacion debe se de o a 10 ");
                              return;  
                          }
                    int puntos=Integer.parseInt(jtPuntos.getText());
                    int cooX=Integer.parseInt(jtX.getText());
                    int cooY=Integer.parseInt(jtY.getText());
                     
//                    boolean est=jrEstado.isSelected();
                         
                    
                      if (jCespe.getSelectedItem()==null ||jdFecha.getDate()==null ) {
                          JOptionPane.showMessageDialog(this, " * campos requeridos ");
                          return;
                      }
                      
                      LocalDate fechaN= jdFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                      if (fechaN.isAfter(LocalDate.now()) ) {
                              JOptionPane.showMessageDialog(this, " no puede iniciar un siniestro pasada la fecha actual ");
                              return;
                          }
                       String tipo=jCespe.getSelectedItem()+"";
                      if (sin == null) {
                          
                          sin = new Siniestro(tipo, fechaN, cooX, cooY, detalle,fechaR,puntos,bri);
                          sinData.guardarSiniestro(sin);
                          bri.setLibre(true);
                          BrigadaData actual=new BrigadaData();
                          actual.modificarBrigada(bri);
                      } else {
                          
                          sin.setBrigada(bri);
                          sin.setCoordX(cooX);
                          sin.setCoordY(cooY);
                          sin.setDetalles(detalle);
                          sin.setFechaResol(fechaN);
                          sin.setFechaSiniestro(fechaR);
                          sin.setPuntuacion(puntos);
                          sin.setTipo(tipo);
                          bri.setLibre(true);
                          BrigadaData actual=new BrigadaData();
                          actual.modificarBrigada(bri);
                          sinData.modificarSiniestro(sin);

                      }
                      } else {
                          LocalDate fechaN= jdFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    if (fechaN.isAfter(LocalDate.now()) ) {
                              JOptionPane.showMessageDialog(this, " no puede iniciar un siniestro pasada la fecha actual ");
                              return;
                          }
                          if (!(jtPuntos.getText().equalsIgnoreCase(""))) {
                             JOptionPane.showMessageDialog(this, "solo puede ingresar una nota al finalizar el siniestro"); 
                             jtPuntos.setText("");
                             return;
                          }
                          
                          BrigadaData bd = new BrigadaData();
                          Brigada bri = bd.buscarBrigada(0);
                          if (!jtBrigada.getText().equals("0")&&!jtBrigada.getText().equals("")) {
                              int nbrigada = Integer.parseInt(jtBrigada.getText());
                           
                              bri = bd.buscarBrigada(nbrigada);
                              bri.setLibre(false);
                               BrigadaData actual = new BrigadaData();
                              actual.modificarBrigada(bri);
                          }
  
                    
                   
                    String tipo=jCespe.getSelectedItem()+"";
                    String detalle=jtDetalle.getText();
                    
                    int cooX=Integer.parseInt(jtX.getText());
                    int cooY=Integer.parseInt(jtY.getText());
                    if (sin == null) {
                          
                         sin = new Siniestro(tipo, fechaN, cooX, cooY, detalle,bri);
                          sinData.guardarSinResolver(sin);
                          
                      } else {
                          
                          sin.setBrigada(bri);
                          sin.setCoordX(cooX);
                          sin.setCoordY(cooY);
                          sin.setDetalles(detalle);
                          sin.setFechaSiniestro(fechaN);
                          sin.setTipo(tipo);
                          sinData.modificarSinResolver(sin);
                         
                              bri.setLibre(false);
                               BrigadaData actual = new BrigadaData();
                              actual.modificarBrigada(bri);
                          
                          

                      }
                      
                      }
                      
            
                    }catch (NumberFormatException nf){
                        JOptionPane.showMessageDialog(this, "error al llenar los campos"+nf);
                        System.out.println(""+nf);
                    }


    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // busqueda por codigo de siniestros
        limpiarCampos();
        try{
//            String d=jComboBox1.getSelectedItem()+"";
//              sin = sinData.buscarSiniestro(Integer.parseInt(d));
             sin =(Siniestro)jComboBox1.getSelectedItem();
            sin=sinData.buscarSiniestro(sin.getCodigo());
            if (sin!=null) {
                 
                setCespe(sin.getTipo());
                jtDetalle.setText(sin.getDetalles());
                jtBrigada.setText(sin.getBrigada().getCodBrigada()+"");
                
                jtX.setText(sin.getCoordX()+"");
                jtY.setText(sin.getCoordY()+"");
                jlmarca.setLocation(sin.getCoordX(),sin.getCoordY());
                
                if (sin.getBrigada().getCodBrigada()!=0) {
                    Brigada bri=sin.getBrigada();
                Cuartel cuartel=bri.getCuartel();
                jlCuartel.setLocation(cuartel.getCoorX(),cuartel.getCoorY());
                jlCuartel.setVisible(true);
                }else
                    jlCuartel.setLocation(0,0);
                
                
            jlmarca.setVisible(true);

                Date date = Date.from(sin.getFechaSiniestro().atStartOfDay(ZoneId.systemDefault()).toInstant());
                jdFecha.setDate(date);
                
                if (sin.getFechaResol()!=null) {
                    Date date2 = Date.from(sin.getFechaResol().atStartOfDay(ZoneId.systemDefault()).toInstant());
                jdResol.setDate(date2);
                
                jtPuntos.setText(sin.getPuntuacion()+"");
                }
                

            }else{
                JOptionPane.showMessageDialog(this, "intenté otra vez");
            }

        }catch (NumberFormatException nf){
            JOptionPane.showMessageDialog(this, "error al llenar los campos");
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtXActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // asignar brigada
        String espe= jCespe.getSelectedItem()+"";
        Brigada brigada1=new Brigada();
        Cuartel cuartel1=new Cuartel();
        BrigadaData brigadas=new BrigadaData();
        if (!jtBrigada.getText().equalsIgnoreCase("0")) {
            boolean aux=false;
           
            int opcion = JOptionPane.showConfirmDialog(null, "brigada ya fue asignada ¿desea modificarla manualmente?", "Confirmación", JOptionPane.OK_CANCEL_OPTION);

        if (opcion == JOptionPane.OK_OPTION) {
            // El usuario hizo clic en "Aceptar"
           String brm = JOptionPane.showInputDialog("Por favor, ingrese una brigada:");

        // Comprueba si el usuario ingresó un texto
        if (brm != null && brm.matches("^[0-9]+$")) {
            
            brigada1=brigadas.buscarBrigadaPorEsp(Integer.parseInt(brm),espe);
            if (brigada1==null) {
                return;
            }else{
            
            System.out.println("Texto ingresado: " + brm);
            brigada1=brigadas.buscarBrigada(Integer.parseInt(jtBrigada.getText()));
            brigada1.setLibre(true);
            brigadas.modificarBrigada(brigada1);
            jtBrigada.setText(brm);
            return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "ingrese un numero entero valido");
           
        }
            
        } else {
            // El usuario hizo clic en "Cancelar" o cerró el cuadro de diálogo
            
            return;
        }
            
            
            
        }
        
        
        
        
        
        
        double Distancia=100000;
        
        CuartelData busq=new CuartelData();
        ArrayList<Cuartel> Cuarteles = busq.listarcuartel();
        Iterator<Cuartel> Iterator2 = Cuarteles.iterator();
        
        Brigada brigada=new Brigada();
        while (Iterator2.hasNext()) {
//            boolean sitiene=false;
            Cuartel cua = Iterator2.next();
             ArrayList<Brigada> BrigadaPorCuartel =brigadas.buscarBrigadaPorCuartel(cua.getCodCuartel()); 
            Iterator<Brigada> Iterator3 = BrigadaPorCuartel.iterator();
            while (Iterator3.hasNext()) {
            Brigada bri3 = Iterator3.next();
                if (bri3.getEspecialidad().equals(espe)) {
                    
                    int x1=cua.getCoorX();
                    int x2=sin.getCoordX();
                    int y1=cua.getCoorY();
                    int y2=sin.getCoordY();
                    
                   int x = x2 - x1;
                   int y = y2 - y1;
                    
                    if (Math.sqrt(x * x + y * y)<Distancia) {
                        Distancia = Math.sqrt(x * x + y * y);
                        brigada1=bri3;
                        cuartel1=cua;
                        
                    }
//                    System.out.println("Distance between the two points is : " + Distancia);
                    
                    
                }
            
            }

        }
        String bx=brigada1.getCodBrigada()+"";
        if (bx.equalsIgnoreCase("0")) {
            JOptionPane.showMessageDialog(this, "no se encuentran brigadas disponibles para afrontar ese tipo de siniestro");
            
               jlCuartel.setLocation(0,0);
            
        }
        double distancia= ((double)Math.round(Distancia * 100d) / 100d);
     
       JOptionPane.showMessageDialog(this,"se asignara automaticamente la brigada\nmas sercana que corresponda a\nla espesialidad requerida\n    \nEl cuartel mas proximo al \nSiniestro se encuentra a : "+distancia*7.8 + " km "+"\n brigada asignada: "+brigada1.getNombreBr()+" Codigo: "+brigada1.getCodBrigada(),"            Distacia : ",JOptionPane.PLAIN_MESSAGE,new ImageIcon("src/imagenes/Bombero-16.gif"));
        jtBrigada.setText(brigada1.getCodBrigada()+"");
        jtBrigada.setText(bx);
        
                Cuartel cuartel=brigada1.getCuartel();
                jlCuartel.setLocation(cuartel.getCoorX(),cuartel.getCoorY());
                jlCuartel.setVisible(true);
                
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jDesktopPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDesktopPane2MouseClicked
       // captura de las cordenadas en el mapa
        
        
            jtX.setText("");
        jtY.setText("");
//       raton.actualizar(this);
//        jLabel3.setText(raton.obtenerPo().setY()+"");
raton.actualizar(jDesktopPane2);
        jtX.setText((int)raton.obtenerPo().getX()+"");
        jtY.setText((int)raton.obtenerPo().getY()+"");
        jlmarca.setVisible(true);
        jlmarca.setLocation((int)raton.obtenerPo().getX(),(int)raton.obtenerPo().getY());
        jlmarca.setVisible(true);
        
    }//GEN-LAST:event_jDesktopPane2MouseClicked

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
//        // muestra texto informativo acerca del boton asignar brigada
//         jlmarca.setLocation(sin.getCoordX(),sin.getCoordY());
//        jlAsignar.setVisible(true);
////        jlAsignar.setText("se asignara automaticamente la brigada\n que este a menor distancia del siniestro\n y que cubra esa especialidad");
//        jlAsignar.setText("<html>se asignara automaticamente la brigada<br>que este a menor distancia del siniestro<br>y que cubra esa especialidad</html>");
//       
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
//       jlmarca.setLocation(sin.getCoordX(),sin.getCoordY());
//        jlAsignar.setVisible(false);
         
    }//GEN-LAST:event_jButton5MouseExited
private void cargarCombo (){
SiniestroData busca=new SiniestroData();
ArrayList<Siniestro> lista=busca.obtenerSiniestro2(); 

    for (int i = 0; i < lista.size(); i++) {
//   alumno p=new alumno(lista.get(i).getIdAlumno(),lista.get(i).getDni(),lista.get(i).getApellido(),lista.get(i).getNombre(),lista.get(i).getFechaNac(),lista.get(i).isActivo());
        jComboBox1.addItem(lista.get(i));
                
               
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jCespe;
    private javax.swing.JComboBox<Siniestro> jComboBox1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private com.toedter.calendar.JDateChooser jdFecha;
    private com.toedter.calendar.JDateChooser jdResol;
    private javax.swing.JLabel jlAsignar;
    private javax.swing.JLabel jlCuartel;
    private javax.swing.JLabel jlCuartel1;
    private javax.swing.JLabel jlInfo;
    private javax.swing.JLabel jlmarca;
    private javax.swing.JTextField jtBrigada;
    private javax.swing.JTextField jtDetalle;
    private javax.swing.JTextField jtPuntos;
    private javax.swing.JTextField jtX;
    private javax.swing.JTextField jtY;
    // End of variables declaration//GEN-END:variables
 
    private void CargarCespe(){

        
        for (int i = 0; i < especial.length; i++) {
            jCespe.addItem(especial[i]);

        }

    }
    private void setCespe(String ep){
   
    
    
        
        for (int i = 0; i < especial.length; i++) {
            
            if (especial[i].equals(ep)) {
                jCespe.setSelectedIndex(i);
               
            }

        }

    }
    public void limpiarCampos(){
    jCespe.setSelectedItem(null);
        jtDetalle.setText("");
        jtBrigada.setText("");
        
        jtX.setText("");
        jtY.setText("");
        jdFecha.setDate(null);
        jdResol.setDate(null);
       
        jtPuntos.setText("");
    
    }

}
